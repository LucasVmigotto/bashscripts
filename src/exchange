#!/usr/bin/env node

const { exec } = require('child_process')
const url = 'https://api.promasters.net.br/cotacao/v1/valores'
const api = (currency = '') => {
  if (!currency) {
    return `${url}`
  } else {
    return `${url}?moedas=${currency}`
  }
}

let firstArg

const calc = (value, toConvert = firstArg) => {
  return (value * toConvert).toFixed(2)
}

const checkStatus = (data) => {
  if (!data.status) {
    console.log(`Invalid Input '${process.argv[2]}'`)
    process.exit()
  }
}

const showExchange = ({ USD, EUR, ARS, GBP, BTC }) => {
  console.log(`\n\t\tValores convertidos\n` +
    `Real:\t\t\t\t\t R\u0024 ${firstArg}\n` + 
    `DÃ³lar:\t\t\t\t\t \u0024 ${calc(USD.valor)}\n` +
    `Euro:\t\t\t\t\t \u20AC ${calc(EUR.valor)}\n` +
    `Peso Argentino:\t\t\t\t AR\u0024 ${calc(ARS.valor)}\n` +
    `Libra Esterlina:\t\t\t \u00A3 ${calc(GBP.valor)}\n` +
    `Bitcoin:\t\t\t\t XBT ${calc(BTC.valor)}\n`)
}

const currencyExchange = () => {
  exec(`curl ${api()}`, (err, stdout) => {
    if (err) {
      console.log(`A ${err.name} error occurred\n` +
        `Error description: ${err.message}`)
      return
    }
    const data = JSON.parse(stdout)
    checkStatus(data)
    showExchange(data.valores)
  })
}

const showConvert = (value) => {
  const toConvert = process.argv[3] || 1.00 
  console.log(`\n\t\tValor convertido\n` +
    `${process.argv[2]} ${toConvert}\t\t\t\t\t R\u0024 ${calc(value, toConvert)}\n`)
}

const convertValue = () => {
  exec(`curl ${api(process.argv[2])}`, (err, stdout) => {
    if (err) {
      console.log(`A ${err.name} error occurred\n` +
        `Error description: ${err.message}`)
      return
    }
    const data = JSON.parse(stdout)
    checkStatus(data)
    if (data.valores.USD) {
      showConvert(data.valores.USD.valor)
    } else if (data.valores.EUR) {
      showConvert(data.valores.EUR.valor)
    } else if (data.valores.ARS) {
      showConvert(data.valores.ARS.valor)
    } else if (data.valores.GBP) {
      showConvert(data.valores.GBP.valor)
    } else {
      showConvert(data.valores.BTC.valor)
    }
  })
}

firstArg = process.argv[2] || 1.00
if (RegExp(/^[0-9]/).test(process.argv[2]) ||
  !process.argv[2]) {
  currencyExchange()
} else {
  convertValue()
}